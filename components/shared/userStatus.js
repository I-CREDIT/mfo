import React from 'react'
import {connect} from 'react-redux'
import axios from 'axios'
import Router from 'next/router'
import usersReducer from '../../store/reducers/userReducer'
import Spinner from 'react-spinner-material';
import swal from 'sweetalert'

const mapStateToProps = state => {
  console.log(state)
  return {userReducer: state.userReducer, userStatus: state.userStatus, userHistory: state.userHistory}
}

// console.log(this.props.userStatus.userStatus.todayAmount)
class Status extends React.Component {

  constructor(props) {
    super(props);
    this.state = {
      btnLoading: false
    }
    this.state = {
      sendRepeat: true,
    }
    this.state = {
      step: ''
    }
    this.state = {
      repeatMessage: ''
    }
  }
  
  getCurrentStep() {
    axios.get(`https://api.money-men.kz/api/notFull?iin=${this.props.userReducer.user.UF_4}`, {headers: {
      "Access-Control-Allow-Origin": "*",
    }})
      .then(res => {
        console.log(res) // –Ω—É–∂–Ω–æ –æ—Ç—Å—é–¥–∞ –≤–∑—è—Ç—å step!
        if(res.data.success) {
          this.setState({
            step: res.data.step
          })
        }
      })
      .catch (
        console.log('log')
      )
  }

  componentDidMount() {
    this.getCurrentStep()
  }

  myFunc () {
    console.log(this.state.step)
    if(this.state.step === 1 || this.state.step === 2) {
      window.scrollTo(0,0)
      console.log(2)
      Router.push(`/cabinet/continue`)
    }
  }

  handleSubmit(money) {
    let values = {
      iin: this.props.userReducer.user.UF_4,
      amount: money
    }
    swal("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ", {
      text: `–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ

      –í–∞—à –ò–ò–ù: ${values.iin}    –°—É–º–º–∞ –æ–ø–ª–∞—Ç—ã: ${(+values.amount).toLocaleString("ru-RU")} —Ç–≥`,
      buttons: {
        catch: {
          text: "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",
          value: "catch",
        },
        cancel: "–û—Ç–º–µ–Ω–∞"
      }
    }).then(value=>{
      switch (value) {
        case "catch":
          this.setState({
            btnLoading: true,
          });
           axios.post(`https://api.money-men.kz/api/make_payment123`, values)
            .then((response) => {
              this.setState({
                btnLoading: false
              })
              location.replace(response.data[0] + "?" + response.data[1])
            })
            .catch((error) => {
              console.log(error)
              this.setState({
                btnLoading: false
              })
            });
        case "cancel":
          break
      }
    })
  }

  render() {
    switch (this.props.userStatus.userStatus.stage) {
      case 1:
        return (
          <div className='mt-5'>
            <h5 className='text-center'>–¢–µ–∫—É—â–∞—è –∑–∞–≤—è–∫–∞</h5>
            <div className='cabinetmessage text-center'>
              –£ –≤–∞—Å –∑–∞–∏–º –≤ —Å—Ç–∞—Ç—É—Å–µ
              <b>
                "–õ—å–≥–æ—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥"</b>
            </div>
            <div>
              <table className='lperiod'>
                <thead>
                  <tr>
                    <th>
                      –î–∞—Ç–∞ –≤—ã–¥–∞—á–∏ üìÖ
                    </th>
                    {/* <th>
                      –°—É–º–º–∞ –Ω–∞ —Ä—É–∫–∏ üí∞
                    </th> */}
                    <th>
                      –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ª—å–≥–æ—Ç–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ üìÖ
                    </th>
                    <th>–û—Å–Ω–æ–≤–Ω–æ–π –¥–æ–ª–≥ üí∏</th>
                    <th>C—É–º–º–∞ –ø–æ–≥–∞—à–µ–Ω–∏—è –ª—å–≥–æ—Ç–Ω—ã–π –ø–µ—Ä–∏–æ–¥ üí∏</th>
                    <th>–°—É–º–º–∞ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ –Ω–∞ —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É</th>
                    <th>–î–∞—Ç–∞ –ø–æ–≥–∞—à–µ–Ω–∏—è üìÖ</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td>{this.props.userStatus.userStatus.givenDate}</td>
                    {/* <td>{this.props.userStatus.userStatus.amount}</td> */}
                    <td>{this.props.userStatus.userStatus.lp}</td>
                    <td>{(+this.props.userStatus.userStatus.mainAmount).toLocaleString()} —Ç–≥</td>
                    <td>{(+this.props.userStatus.userStatus.lpAmount).toLocaleString()} —Ç–≥</td>
                    <td>{(+this.props.userStatus.userStatus.todayAmount).toLocaleString()} —Ç–≥</td>
                    <td>{this.props.userStatus.userStatus.endDate}</td>
                  </tr>
                </tbody>
              </table>
              <div className="buttonForm">
                {this.state.btnLoading === true ?
                  <Spinner className="loading" size={200} spinnerColor={"#ef2221"} spinnerWidth={2} visible={true} /> :
                  <button onClick={() => this.handleSubmit()} className=" oplataform--button" type="submit">–ü–æ–≥–∞—Å–∏—Ç—å {(+this.props.userStatus.userStatus.todayAmount).toLocaleString("ru-RU")} —Ç–µ–Ω–≥–µ</button>}
              </div>
            </div>
          </div>
        )
      case 2:
        return (
          <div className='mt-5'>
              <h5 className='text-center'>–¢–µ–∫—É—â–∞—è –∑–∞–≤—è–∫–∞</h5>
            <div className='cabinetmessage text-center'>
              –£ –≤–∞—Å –∑–∞–∏–º –≤ —Å—Ç–∞—Ç—É—Å–µ
              <b>
                "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∑–∞–∏–º"</b>
            </div>
            <div>
              <table className='vdolge'>
                <thead>
                  <tr>
                    <th>
                      –î–∞—Ç–∞ –≤—ã–¥–∞—á–∏ üìÖ
                    </th>
                    {/* <th>
                      –°—É–º–º–∞ –Ω–∞ —Ä—É–∫–∏ üí∞
                    </th> */}

                    <th>–û—Å–Ω–æ–≤–Ω–æ–π –¥–æ–ª–≥ üí∏</th>
                    <th>–°—É–º–º–∞ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ –Ω–∞ —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É</th>
                    <th>–î–∞—Ç–∞ –ø–æ–≥–∞—à–µ–Ω–∏—è üìÖ</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td>{this.props.userStatus.userStatus.givenDate}</td>
                    {/* <td>{this.props.userStatus.userStatus.amount}</td> */}
                    <td>{(+this.props.userStatus.userStatus.mainAmount).toLocaleString()} —Ç–≥</td>
                    <td>{(+this.props.userStatus.userStatus.todayAmount).toLocaleString()} —Ç–≥</td>
                    <td>{this.props.userStatus.userStatus.endDate}</td>
                  </tr>
                </tbody>
              </table>
              <div className="buttonForm">
                {this.state.btnLoading === true ?
                  <Spinner className="loading" size={200} spinnerColor={"#ef2221"} spinnerWidth={2} visible={true} /> :
                  <button onClick={() => this.handleSubmit(this.props.userStatus.userStatus.prolongation)} className=" oplataform--button" type="submit">–ü—Ä–æ–¥–ª–∏—Ç—å {(+this.props.userStatus.userStatus.prolongation).toLocaleString("ru-RU")} —Ç–µ–Ω–≥–µ</button>}
                {this.state.btnLoading === true ?
                  <Spinner className="loading" size={200} spinnerColor={"#ef2221"} spinnerWidth={2} visible={true} /> :
                  <button onClick={() => this.handleSubmit()} className=" oplataform--button" type="submit">–ü–æ–≥–∞—Å–∏—Ç—å {(+this.props.userStatus.userStatus.todayAmount).toLocaleString("ru-RU")} —Ç–µ–Ω–≥–µ</button>}
              </div>
            </div>
          </div>
        )
      case 3:
        return (
          <div className='mt-5'>
            {/* <div className='container alert alert-primary'>
              <h4 className='alert-heading'>–°—Ç–∞—Ç—É—Å –≤–∞—à–µ–≥–æ —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∏–º–∞</h4>
              <hr/>
              <p className='mb-0'><b>–í—ã –≤ –ø—Ä–æ—Å—Ä–æ—á–∫–µ.</b> –û—Ç–¥–µ–ª –≤–∑—ã—Å–∫–∞–Ω–∏—è: <b><a href="tel:+77788701029">+7 778 870 10 29</a></b>. –£—Ç–æ—á–Ω–∏—Ç–µ —Å—É–º–º—É –¥–æ–ª–≥–∞ –ø–æ –Ω–æ–º–µ—Ä—É <b><a href="tel:+77272501500">+7 727 250 1500</a></b>, <b><a href="tel:+77007501500">+7 700 750 1500</a></b> –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤
                <b><a classname="whatsapptext" href='https://api.whatsapp.com/send?phone=+77015382439' target="_blank"> WhatsApp <i class="fa fa-whatsapp" aria-hidden="true"></i></a></b> </p>
            </div>
            <div className='cabinetmessage text-center'>
              –£ –≤–∞—Å –∑–∞–∏–º –≤ —Å—Ç–∞—Ç—É—Å–µ
              <b>
                 "–ü—Ä–æ—Å—Ä–æ—á–µ–Ω"</b>
            </div> */}
            <div>
              <table className='vprosrochke'>
                <thead>
                  <tr>
                    <th>
                      –î–∞—Ç–∞ –≤—ã–¥–∞—á–∏ üìÖ
                    </th>

                    <th>–û—Å–Ω–æ–≤–Ω–æ–π –¥–æ–ª–≥ üí∏</th>
                    <th>–ü–µ–Ω—è</th>
                    <th>–°—É–º–º–∞ –≤–æ–∑–Ω–∞–≥—Ä–æ–∂–¥–µ–Ω–∏—è</th>
                    <th>–°—É–º–º–∞ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ –Ω–∞ —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É</th>
                    <th>–î–∞—Ç–∞ –ø–æ–≥–∞—à–µ–Ω–∏—è üìÖ</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td>{this.props.userStatus.userStatus.givenDate}</td>
                    <td>{(+this.props.userStatus.userStatus.mainAmount).toLocaleString()} —Ç–≥</td>
                    <td>{(+this.props.userStatus.userStatus.penalty).toLocaleString()} —Ç–≥</td>
                    <td>{(+this.props.userStatus.userStatus.reward).toLocaleString()} —Ç–≥</td>
                    <td>{(+this.props.userStatus.userStatus.todayAmount).toLocaleString()} —Ç–≥</td>
                    <td>{this.props.userStatus.userStatus.endDate}</td>
                  </tr>
                </tbody>
              </table>
              <div className="buttonForm">
                {this.state.btnLoading === true ?
                  <Spinner className="loading" size={200} spinnerColor={"#ef2221"} spinnerWidth={2} visible={true} /> :
                  <button onClick={() => this.handleSubmit(this.props.userStatus.userStatus.prolongation)} className=" oplataform--button" type="submit">–ü—Ä–æ–¥–ª–∏—Ç—å {(+this.props.userStatus.userStatus.prolongation).toLocaleString("ru-RU")} —Ç–µ–Ω–≥–µ</button>}
                {this.state.btnLoading === true ?
                  <Spinner className="loading" size={200} spinnerColor={"#ef2221"} spinnerWidth={2} visible={true} /> :
                  <button onClick={() => this.handleSubmit(this.props.userStatus.userStatus.todayAmount)} className=" oplataform--button" type="submit">–ü–æ–≥–∞—Å–∏—Ç—å {(+this.props.userStatus.userStatus.todayAmount).toLocaleString("ru-RU")} —Ç–µ–Ω–≥–µ</button>}
              </div>
            </div>
          </div>
        )
      case 4:
        return (
          <div className='container'>
            <div className='alert alert-primary'>
              <h4 className='alert-heading'>–°—Ç–∞—Ç—É—Å –≤–∞—à–µ–≥–æ —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∏–º–∞</h4>
              <hr/>
              <p className='mb-0'><b>–í—ã –≤ –ø—Ä–æ—Å—Ä–æ—á–∫–µ.</b> –£—Ç–æ—á–Ω–∏—Ç–µ —Å—É–º–º–∞ –¥–æ–ª–≥–∞ –ø–æ –Ω–æ–º–µ—Ä—É <a classname="whatsapp" href='https://api.whatsapp.com/send?phone=+77015382439' target="_blank"><i class="fa fa-whatsapp" aria-hidden="true"></i>  +7 701 538 2439 (WhatsApp)</a></p>
            </div>
            <div className='cabinetmessage text-center'>
              –£ –≤–∞—Å –∑–∞–∏–º –≤ —Å—Ç–∞—Ç—É—Å–µ
              <b>
                "–ü—Ä–æ—Å—Ä–æ—á–µ–Ω"</b>
            </div>
          </div>
        )
      case 5:
        return (
          <div className='container'>
            <div className='alert alert-primary'>
              <h4 className='alert-heading'>–°—Ç–∞—Ç—É—Å –≤–∞—à–µ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–æ–≥–æ –∑–∞–∏–º–∞</h4>
              <hr/>
              <p className='mb-0'>{this.props.userStatus.userStatus.message}</p>
            </div>
          </div>
        )
      case 6:
        return (
          <div className='container'>
            <div className='alert alert-primary'>
              <h4 className='alert-heading'>–°—Ç–∞—Ç—É—Å –≤–∞—à–µ–π –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞—è–≤–∫–∏</h4>
              <hr/>
              <p className='mb-0'>{this.props.userStatus.userStatus.message}</p>
            </div>
          </div>
        )
        case 7:
        return (
          <div className='container'>
            <div className='alert alert-primary'>
              <h4 className='alert-heading'>–°—Ç–∞—Ç—É—Å –≤–∞—à–µ–π –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞—è–≤–∫–∏</h4>
              <hr/>
              <p className='mb-0'>–í—ã –Ω–µ –¥–æ–Ω—Ü–∞ –∑–∞–ø–æ–ª–Ω–∏–ª–∏ –∞–Ω–∫–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –¥–æ–∑–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ</p>
            </div>
            <div className="cabinet-btn">
            <img alt='loading' src={require("../../img/svg/loadingCircle.svg")}/>
              <button onClick={() => this.myFunc()}>–î–æ–∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É</button>
            </div> 
          </div>
        )
      default:
        return (
          <div></div>
        )
    }

    // return (   <div>     <table>       <thead>         <tr>           <th> –î–∞—Ç–∞
    // –≤—ã–¥–∞—á–∏ üìÖ           </th>           <th>             –°—É–º–º–∞ –Ω–∞ —Ä—É–∫–∏ üí∞ </th>
    //       <th>             –û—Å–Ω–æ–≤–Ω–æ–π –¥–æ–ª–≥ üí∏ </th> <th>Example</th>
    // <th>Example</th> <th>Example</th> <th>Example</th>         </tr> </thead>
    // <tbody>         <tr> <td>12.12.2020</td>           <td>10000</td>
    // <td>15000</td>  <td>1/2"</td>           <td>Kangal / Coil</td> </tr> </tbody>
    //    </table>   </div> )
  }
}

export default(connect(mapStateToProps)(Status));